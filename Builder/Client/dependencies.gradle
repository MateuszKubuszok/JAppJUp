//----------------------------------------------------------------------------
//                    CLIENT'S DEPENDENCIES' CONFIGURATION
//----------------------------------------------------------------------------

configure(clientProjects) {
	repositories {
		mavenCentral()
	}
}

// cglib:
def cglibVersion = '2.2'
def cglib        = "cglib:cglib-nodep:${cglibVersion}@jar"


// commons:
def commonsCodecVersion = '1.5'
def commonsCodec        = "commons-codec:commons-codec:${commonsCodecVersion}@jar"


// FEST Assertions:
def festCoreVersion = '2.0M8'
def festCore        = "org.easytesting:fest-assert-core:${festCoreVersion}@jar"

def festTestVersion = '2.1.0'
def festTest        = "org.easytesting:fest-test:${festTestVersion}@jar"

def festUtilVersion = '1.2.3'
def festUtil        = "org.easytesting:fest-util:${festUtilVersion}@jar"


// Guava:
def guavaVersion = '13.0.1'
def guava        = "com.google.guava:guava:${guavaVersion}@jar"


// javasist:
def javasistVersion = '3.16.1-GA'
def javasist        = "org.javassist:javassist:${javasistVersion}@jar"


// Jaxen:
def jaxenVersion = '1.1.4'
def jaxen        = "jaxen:jaxen:${jaxenVersion}@jar"


// JUnit
def jUnitVersion = '4.7'
def jUnit        = "junit:junit:${jUnitVersion}@jar"


// Mockito:
def mockitoVersion = '1.9.0'
def mockito        = "org.mockito:mockito-all:${mockitoVersion}@jar"


// Objenesis:
def objenesisVersion = '1.2'
def objenesis        = "org.objenesis:objenesis:${objenesisVersion}@jar"


// SeaGlassLookAndFeel:
def seaGlassLookAndFeelVersion = '0.2'
def seaGlassLookAndFeel        = "com.seaglasslookandfeel:seaglasslookandfeel:${seaGlassLookAndFeelVersion}@jar"

def dom4j = "${externalLibrariesDir}/dom4j/dom4j-2.0.0-ALPHA-2.jar"
def forms = "${externalLibrariesDir}/com.jgoodies/jgoodies-forms-1.3.0.jar"

project(':JSDPU') {
	dependencies {
		compile(guava)
		
		testCompile(
			cglib,
			festCore,
            festTest,
			festUtil,
			javasist,
			jUnit,
			mockito,
			objenesis
		)
	}
	
	jar { manifest { attributes "Class-Path": "./libraries/guava-13.0.1.jar" } }
}

project(':AutoUpdaterCommons') {
}

project(':AutoUpdaterInstaller') {
	dependencies {
		compile(
			project(':JSDPU'),
			project(':AutoUpdaterCommons'),
			guava
		)
				
		testCompile(
			festCore,
            festTest,
			festUtil,
			jUnit
		)
		if (noEclipseTask) {
			testCompile project(':JSDPU').sourceSets.test.output
		}
	}
	
	jar { manifest { attributes "Class-Path": "./AutoUpdaterCommons.jar ./JSDPU.jar                      ./libraries/guava-13.0.1.jar ./installer.logger.properties" } }
}


project(':AutoUpdaterLibrary') {
	dependencies {
		compile(
			project(':JSDPU'),
			project(':AutoUpdaterCommons'),
			commonsCodec,
			guava,
			jaxen,
			files(dom4j)
		)
				
		testCompile(
			cglib,
			festCore,
            festTest,
			festUtil,
			javasist,
			jUnit,
			mockito,
			objenesis
		)
		if (noEclipseTask) {
			testCompile project(':JSDPU').sourceSets.test.output
		}
	}
	
	jar { manifest { attributes "Class-Path": "./AutoUpdaterCommons.jar ./JSDPU.jar                      ./libraries/dom4j-2.0.0-ALPHA-2.jar ./libraries/guava-13.0.1.jar     ./libraries/jaxen-1.1.4.jar ./libraries/commons-codec-1.5.jar" } }
}

project(':AutoUpdaterGuiClient') {
	dependencies {
		compile(
			project(':JSDPU'),
			project(':AutoUpdaterLibrary'),
			guava,
			seaGlassLookAndFeel,
			files(forms)
		)
		
		if (noEclipseTask) {
			testCompile project(':JSDPU').sourceSets.test.output
			testCompile project(':AutoUpdaterLibrary').sourceSets.test.output
		}
	}

	jar { manifest { attributes "Class-Path": "./AutoUpdaterLibrary.jar ./JSDPU.jar                      ./libraries/guava-13.0.1.jar ./libraries/jgoodies-forms-1.3.0.jar    ./libraries/seaglasslookandfeel-0.2.jar ./logger.properties"} }
}